const Sequelize = require('sequelize');
const dbConfig = require('../../config/settings').db;

const sequelize = new Sequelize(dbConfig.database, dbConfig.user, dbConfig.password, {
  host: dbConfig.host,
  dialect: dbConfig.dialect,
});

const Protocol = sequelize.define('SMRS_PROTOCOL', {
  PROTOCOL_ID: {
    type: Sequelize.INTEGER,
    primaryKey: true,
  },
  PROTOCOL_NO: Sequelize.STRING(35),
  PARTNER_ID_ORG_DEP: Sequelize.INTEGER,
  PARTNER_ID_CLIENT_DEP: Sequelize.INTEGER,
  IRB_NO: Sequelize.STRING(55),
  IND_NO: Sequelize.STRING(10),
  STATUS: Sequelize.STRING(30),
  PHASE: Sequelize.STRING(500),
  TITLE: Sequelize.TEXT,
  SHORT_TITLE: Sequelize.TEXT,
  STUDY_TARGET_ACCRUAL: Sequelize.INTEGER,
  COMMENTS: Sequelize.TEXT,
  ELIGIBILITY: Sequelize.TEXT,
  CCVA_ANNUAL_ACCRUAL: Sequelize.INTEGER,
  SCOPE: Sequelize.STRING(500),
  TREATMENT_TYPE: Sequelize.STRING(500),
  TOXICITY_SCHEME: Sequelize.STRING(500),
  SUMMARY: Sequelize.TEXT,
  AGE: Sequelize.CHAR,
  TARGET_ACCRUAL: Sequelize.INTEGER,
  TARGET_ACCRUAL_UPPER: Sequelize.INTEGER,
  ADJUVANT: Sequelize.CHAR,
  CANCER_CONTROL: Sequelize.CHAR,
  CANCER_PREVENTION: Sequelize.CHAR,
  DATA_MONITORING: Sequelize.STRING(500),
  GCRC_APPROVAL: Sequelize.CHAR,
  INVESTIGATIONAL_DRUG: Sequelize.CHAR,
  INVESTIGATOR_INITIATED: Sequelize.CHAR,
  REGISTRATION_SOURCE: Sequelize.STRING(500),
  CC_CTRO_REGISTRATION: Sequelize.CHAR,
  GCRC_NO: Sequelize.STRING(12),
  GCRC_APPROVALDATE: Sequelize.DATE,
  LTFU: Sequelize.CHAR,
  GCRC_CATEGORY: Sequelize.CHAR,
  ACCRUAL_SUMMARY: Sequelize.CHAR,
  ACCRUAL_DURATION: Sequelize.INTEGER,
  SUMMARY4_REPORT_TYPE: Sequelize.STRING(500),
  EXCLUDE_ON_WEB: Sequelize.CHAR,
  AFFILIATE_ACCRUAL: Sequelize.INTEGER,
  INVOLVES_THERAPY: Sequelize.CHAR,
  AUTO_GENERATED_SEQUENCE_NO: Sequelize.CHAR,
  OVERHEAD_COST_PCT: Sequelize.INTEGER,
  INDIRECT_COST_PCT: Sequelize.INTEGER,
  PROTOCOL_INDIRECT: Sequelize.CHAR,
  SUBJECT_INDIRECT: Sequelize.CHAR,
  BUDGET_TRACKING_NO: Sequelize.STRING(50),
  PRMC_NO: Sequelize.STRING(32),
  PRMC_REVIEW_REQUIRED: Sequelize.CHAR,
  INVOLVES_CORRELATES: Sequelize.CHAR,
  RATE_BASE: Sequelize.STRING(500),
  MAX_SCREENING_FAILURES: Sequelize.INTEGER,
  BUDGET_ACCRUAL_TYPE: Sequelize.CHAR,
  DRUG_ACCOUNTABILITY: Sequelize.CHAR,
  AUTOMATED_MRN: Sequelize.CHAR,
  HOSPITAL_ACCOUNT_NO: Sequelize.STRING(40),
  SUBJECT_ESTIMATE: Sequelize.INTEGER,
  CYCLE_ESTIMATE: Sequelize.INTEGER,
  AFFILIATE_ONLY: Sequelize.CHAR,
  PRIORITY: Sequelize.INTEGER,
  INVOICE_FREQUENCY: Sequelize.INTEGER,
  NOTIFICATION_START_DATE: Sequelize.DATE,
  NOTIFICATION_COMMENTS: Sequelize.TEXT,
  BUDGET_COMMENTS: Sequelize.TEXT,
  CTMC_FREQUENCY: Sequelize.INTEGER,
  INDIRECT_CUMULATIVE: Sequelize.CHAR,
  DISPLAY_BUDGET_OPTIONS: Sequelize.CHAR,
  MIN_SAES: Sequelize.INTEGER,
  MIN_OSRS: Sequelize.INTEGER,
  PDQ_NO: Sequelize.STRING(35),
  NCT_ID: Sequelize.STRING(35),
  DISCARDED_TISSUE: Sequelize.CHAR,
  CTMS_EXPORT: Sequelize.CHAR,
  ACCRUAL_NOT_APPLICABLE: Sequelize.CHAR,
  PDQ_ID: Sequelize.STRING(25),
  ESTIMATED_COMPLETION_DATE: Sequelize.DATE,
  LIBRARY: Sequelize.STRING(200),
  SEQUENCE_NO_PREFIX: Sequelize.STRING(10),
  SEQUENCE_NO_START: Sequelize.INTEGER,
  INVESTIGATIONAL_DEVICE: Sequelize.CHAR,
  DEPARTMENT_ID: Sequelize.INTEGER,
  ALLOW_ON_TX_BEFORE_ON_STUDY: Sequelize.CHAR,
  ALLOW_DUPLICATE_ENROLLMENT: Sequelize.CHAR,
  AGE_OF_MAJORITY_RECONSENT_REQ: Sequelize.CHAR,
  RESEARCH_GROUP_ID: Sequelize.STRING(50),
  LOCKED_DATE: Sequelize.DATE,
  NCI_ID: Sequelize.STRING(35),
  OFF_TX_EQUALS_ON_FOLLOWUP: Sequelize.CHAR,
  COMPANION_STUDY_FLAG: Sequelize.CHAR,
  SPONSOR_TYPE_OVERRIDE: Sequelize.STRING(500),
  MULTI_SITE: Sequelize.CHAR,
  USE_RANDOM_ALGORITHM: Sequelize.CHAR,
  STUDY_COMPLETION_DATE: Sequelize.DATE,
  STUDY_COMPLETION_DATE_TYPE: Sequelize.STRING(25),
  ESTIMATED_COMPLETION_DATE_TYPE: Sequelize.STRING(25),
  GCRC_CATEGORY_CODE: Sequelize.STRING(500),
  PRECISION_TRIAL: Sequelize.CHAR,
  PRECISION_TRIAL_CLASSIFICATION: Sequelize.STRING(55),
}, { underscored: true, freezeTableName: true, timestamps: false });

module.exports = {
  sequelize,
  protocol: Protocol,
};
